/* AUTO-GENERATED FILE.  DO NOT MODIFY.
 *
 * This class was automatically generated by the
 * aapt tool from the resource data it found.  It
 * should not be modified by hand.
 */

package vn.boidstudio.freshflower;

public final class R {
    public static final class array {
        public static final int flowers=0x7f060002;
        public static final int horz_gv_rows_columns=0x7f060000;
        public static final int vert_gv_rows_columns=0x7f060001;
    }
    public static final class attr {
        /**  Indicates that this list will always be drawn on top of solid, single-color
             opaque background. This allows the list to optimize drawing. 
         <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int cacheColorHint=0x7f010007;
        /** <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int columnWidth=0x7f01000e;
        /**  When set to true, the selector will be drawn over the selected item.
             Otherwise the selector is drawn behind the selected item. The default
             value is false. 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int drawSelectorOnTop=0x7f010003;
        /**  Specifies how to place the content of an object, both
         on the x- and y-axis, within the object itself. 
         <p>Must be one or more (separated by '|') of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>top</code></td><td>0x30</td><td> Push object to the top of its container, not changing its size. </td></tr>
<tr><td><code>bottom</code></td><td>0x50</td><td> Push object to the bottom of its container, not changing its size. </td></tr>
<tr><td><code>left</code></td><td>0x03</td><td> Push object to the left of its container, not changing its size. </td></tr>
<tr><td><code>right</code></td><td>0x05</td><td> Push object to the right of its container, not changing its size. </td></tr>
<tr><td><code>center_vertical</code></td><td>0x10</td><td> Place object in the vertical center of its container, not changing its size. </td></tr>
<tr><td><code>fill_vertical</code></td><td>0x70</td><td> Grow the vertical size of the object if needed so it completely fills its container. </td></tr>
<tr><td><code>center_horizontal</code></td><td>0x01</td><td> Place object in the horizontal center of its container, not changing its size. </td></tr>
<tr><td><code>fill_horizontal</code></td><td>0x07</td><td> Grow the horizontal size of the object if needed so it completely fills its container. </td></tr>
<tr><td><code>center</code></td><td>0x11</td><td> Place the object in the center of its container in both the vertical and horizontal axis, not changing its size. </td></tr>
<tr><td><code>fill</code></td><td>0x77</td><td> Grow the horizontal and vertical size of the object if needed so it completely fills its container. </td></tr>
<tr><td><code>clip_vertical</code></td><td>0x80</td><td> Additional option that can be set to have the top and/or bottom edges of
             the child clipped to its container's bounds.
             The clip will be based on the vertical gravity: a top gravity will clip the bottom
             edge, a bottom gravity will clip the top edge, and neither will clip both edges. </td></tr>
<tr><td><code>clip_horizontal</code></td><td>0x08</td><td> Additional option that can be set to have the left and/or right edges of
             the child clipped to its container's bounds.
             The clip will be based on the horizontal gravity: a left gravity will clip the right
             edge, a right gravity will clip the left edge, and neither will clip both edges. </td></tr>
</table>
         */
        public static final int gravity=0x7f010000;
        /**  Default GridView style. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int gridViewStyle=0x7f010001;
        /** <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int horizontalSpacing=0x7f01000b;
        /**  Drawable used to indicate the currently selected item in the list. 
         <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
         */
        public static final int listSelector=0x7f010002;
        /** <p>May be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
<p>May be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>auto_fit</code></td><td>-1</td><td></td></tr>
</table>
         */
        public static final int numColumns=0x7f010010;
        /** <p>May be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
<p>May be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>auto_fit</code></td><td>-1</td><td></td></tr>
</table>
         */
        public static final int numRows=0x7f010011;
        /** <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int rowHeight=0x7f01000f;
        /** <p>Must be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>vertical</code></td><td>0</td><td> Scroll up vertically. This is the default value. </td></tr>
<tr><td><code>horizontal</code></td><td>1</td><td> Scroll horizontally. </td></tr>
</table>
         */
        public static final int scrollDirectionLandscape=0x7f01000a;
        /**  Use this attribute to control which direction the GridView scrolls when in
             portrait orientation 
         <p>Must be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>vertical</code></td><td>0</td><td> Scroll up vertically. This is the default value. </td></tr>
<tr><td><code>horizontal</code></td><td>1</td><td> Scroll horizontally. </td></tr>
</table>
         */
        public static final int scrollDirectionPortrait=0x7f010009;
        /**  When set to true, the list uses a drawing cache during scrolling.
             This makes the rendering faster but uses more memory. The default
             value is true. 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int scrollingCache=0x7f010005;
        /**  Enables the fast scroll thumb that can be dragged to quickly scroll through
             the list. 
 <attr name="fastScrollEnabled" format="boolean" /> 
 When set to true, the list will use a more refined calculation
             method based on the pixels height of the items visible on screen. This
             property is set to true by default but should be set to false if your adapter
             will display items of varying heights. When this property is set to true and
             your adapter displays items of varying heights, the scrollbar thumb will
             change size as the user scrolls through the list. When set to fale, the list
             will use only the number of items in the adapter and the number of items visible
             on screen to determine the scrollbar's properties. 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int smoothScrollbar=0x7f010008;
        /**  Used by ListView and GridView to stack their content from the bottom. 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int stackFromBottom=0x7f010004;
        /** <p>Must be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>none</code></td><td>0</td><td></td></tr>
<tr><td><code>spacingWidth</code></td><td>1</td><td></td></tr>
<tr><td><code>columnWidth</code></td><td>2</td><td></td></tr>
<tr><td><code>spacingWidthUniform</code></td><td>3</td><td></td></tr>
</table>
         */
        public static final int stretchMode=0x7f01000d;
        /**  When set to true, the list will filter results as the user types. The
             List's adapter must support the Filterable interface for this to work. 
 <attr name="textFilterEnabled" format="boolean" /> 
 Sets the transcript mode for the list. In transcript mode, the list
             scrolls to the bottom to make new items visible when they are added. 
         <p>Must be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>disabled</code></td><td>0</td><td> Disables transcript mode. This is the default value. </td></tr>
<tr><td><code>normal</code></td><td>1</td><td> The list will automatically scroll to the bottom when
                 a data set change notification is received and only if the last item is
                 already visible on screen. </td></tr>
<tr><td><code>alwaysScroll</code></td><td>2</td><td> The list will automatically scroll to the bottom, no matter what items
                 are currently visible. </td></tr>
</table>
         */
        public static final int transcriptMode=0x7f010006;
        /** <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int verticalSpacing=0x7f01000c;
    }
    public static final class color {
        public static final int transparent=0x7f040000;
    }
    public static final class dimen {
        /** 
         Example customization of dimensions originally defined in res/values/dimens.xml
         (such as screen margins) for screens with more than 820dp of available width. This
         would include 7" and 10" devices in landscape (~960dp and ~1280dp respectively).
    
         */
        public static final int activity_horizontal_margin=0x7f050002;
        public static final int horz_item_padding=0x7f050000;
        public static final int vert_item_padding=0x7f050001;
    }
    public static final class drawable {
        public static final int btn_rounded_corner=0x7f020000;
        public static final int btn_rounded_corner_ct=0x7f020001;
        public static final int ic_drawer=0x7f020002;
        public static final int ico_apply=0x7f020003;
        public static final int ico_download=0x7f020004;
        public static final int icon=0x7f020005;
        public static final int icon_drawer_new=0x7f020006;
        public static final int icon_launcher=0x7f020007;
        public static final int icon_no_img=0x7f020008;
        public static final int layout_border=0x7f020009;
        public static final int spinner_black_76=0x7f02000a;
    }
    public static final class id {
        public static final int action_settings=0x7f0a003d;
        public static final int alwaysScroll=0x7f0a000c;
        public static final int auto_fit=0x7f0a0015;
        public static final int bottom=0x7f0a0000;
        public static final int btnCategory=0x7f0a0033;
        public static final int btnNext=0x7f0a0038;
        public static final int btnPrev=0x7f0a0037;
        public static final int btnSave=0x7f0a001e;
        public static final int btnSet=0x7f0a001d;
        public static final int categoryImgView=0x7f0a003a;
        public static final int center=0x7f0a0001;
        public static final int center_horizontal=0x7f0a0002;
        public static final int center_vertical=0x7f0a0003;
        public static final int clip_horizontal=0x7f0a0004;
        public static final int clip_vertical=0x7f0a0005;
        public static final int columnWidth=0x7f0a0011;
        public static final int disabled=0x7f0a000d;
        public static final int fill=0x7f0a0006;
        public static final int fill_horizontal=0x7f0a0007;
        public static final int fill_vertical=0x7f0a0008;
        public static final int gridview=0x7f0a003b;
        public static final int horizontal=0x7f0a000f;
        public static final int hrzGrid=0x7f0a0016;
        public static final int imageView1=0x7f0a0034;
        public static final int imgFullscreen=0x7f0a001c;
        public static final int imgView=0x7f0a0018;
        public static final int layout_1=0x7f0a0021;
        public static final int layout_1_img1=0x7f0a0022;
        public static final int layout_1_img2=0x7f0a0023;
        public static final int layout_2=0x7f0a0024;
        public static final int layout_2_img1=0x7f0a0025;
        public static final int layout_2_img2=0x7f0a0026;
        public static final int layout_2_img3=0x7f0a0027;
        public static final int layout_2_img4=0x7f0a0028;
        public static final int layout_2_img5=0x7f0a0029;
        public static final int layout_3=0x7f0a002a;
        public static final int layout_3_img1=0x7f0a002b;
        public static final int layout_3_img2=0x7f0a002c;
        public static final int layout_3_img3=0x7f0a002d;
        public static final int layout_3_img4=0x7f0a002e;
        public static final int layout_4=0x7f0a002f;
        public static final int layout_4_img1=0x7f0a0030;
        public static final int layout_4_img2=0x7f0a0031;
        public static final int layout_4_img3=0x7f0a0032;
        public static final int left=0x7f0a0009;
        public static final int lstHrzGrid=0x7f0a001f;
        public static final int lstImgView=0x7f0a0020;
        public static final int none=0x7f0a0012;
        public static final int normal=0x7f0a000e;
        public static final int numbers=0x7f0a001a;
        public static final int pbLoader=0x7f0a001b;
        public static final int pdialogLoadMore=0x7f0a003c;
        public static final int right=0x7f0a000a;
        public static final int spacingWidth=0x7f0a0013;
        public static final int spacingWidthUniform=0x7f0a0014;
        public static final int startAppBanner1=0x7f0a0017;
        public static final int title=0x7f0a0019;
        public static final int top=0x7f0a000b;
        public static final int txtBanner=0x7f0a0035;
        public static final int vPhrzGrid=0x7f0a0039;
        public static final int vertical=0x7f0a0010;
        public static final int viewPager=0x7f0a0036;
    }
    public static final class layout {
        public static final int activity_category=0x7f030000;
        public static final int activity_category_item=0x7f030001;
        public static final int activity_full_screen=0x7f030002;
        public static final int activity_list_images=0x7f030003;
        public static final int activity_list_images_item=0x7f030004;
        public static final int activity_main=0x7f030005;
        public static final int activity_viewpager=0x7f030006;
        public static final int activity_viewpager_fragment=0x7f030007;
        public static final int activity_viewpager_preview_list_item=0x7f030008;
        public static final int main=0x7f030009;
        public static final int remove_border_pdialog=0x7f03000a;
    }
    public static final class menu {
        public static final int main=0x7f090000;
    }
    public static final class string {
        public static final int action_settings=0x7f070002;
        public static final int app_name=0x7f070000;
        public static final int hello_world=0x7f070001;
    }
    public static final class style {
        public static final int AppTheme=0x7f080000;
        public static final int TransparentProgressDialogWithPngImage=0x7f080001;
    }
    public static final class styleable {
        /** Attributes that can be used with a TwoWayAbsListView.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #TwoWayAbsListView_cacheColorHint vn.boidstudio.freshflower:cacheColorHint}</code></td><td> Indicates that this list will always be drawn on top of solid, single-color
             opaque background.</td></tr>
           <tr><td><code>{@link #TwoWayAbsListView_drawSelectorOnTop vn.boidstudio.freshflower:drawSelectorOnTop}</code></td><td> When set to true, the selector will be drawn over the selected item.</td></tr>
           <tr><td><code>{@link #TwoWayAbsListView_listSelector vn.boidstudio.freshflower:listSelector}</code></td><td> Drawable used to indicate the currently selected item in the list.</td></tr>
           <tr><td><code>{@link #TwoWayAbsListView_scrollDirectionLandscape vn.boidstudio.freshflower:scrollDirectionLandscape}</code></td><td></td></tr>
           <tr><td><code>{@link #TwoWayAbsListView_scrollDirectionPortrait vn.boidstudio.freshflower:scrollDirectionPortrait}</code></td><td> Use this attribute to control which direction the GridView scrolls when in
             portrait orientation </td></tr>
           <tr><td><code>{@link #TwoWayAbsListView_scrollingCache vn.boidstudio.freshflower:scrollingCache}</code></td><td> When set to true, the list uses a drawing cache during scrolling.</td></tr>
           <tr><td><code>{@link #TwoWayAbsListView_smoothScrollbar vn.boidstudio.freshflower:smoothScrollbar}</code></td><td> Enables the fast scroll thumb that can be dragged to quickly scroll through
             the list.</td></tr>
           <tr><td><code>{@link #TwoWayAbsListView_stackFromBottom vn.boidstudio.freshflower:stackFromBottom}</code></td><td> Used by ListView and GridView to stack their content from the bottom.</td></tr>
           <tr><td><code>{@link #TwoWayAbsListView_transcriptMode vn.boidstudio.freshflower:transcriptMode}</code></td><td> When set to true, the list will filter results as the user types.</td></tr>
           </table>
           @see #TwoWayAbsListView_cacheColorHint
           @see #TwoWayAbsListView_drawSelectorOnTop
           @see #TwoWayAbsListView_listSelector
           @see #TwoWayAbsListView_scrollDirectionLandscape
           @see #TwoWayAbsListView_scrollDirectionPortrait
           @see #TwoWayAbsListView_scrollingCache
           @see #TwoWayAbsListView_smoothScrollbar
           @see #TwoWayAbsListView_stackFromBottom
           @see #TwoWayAbsListView_transcriptMode
         */
        public static final int[] TwoWayAbsListView = {
            0x7f010002, 0x7f010003, 0x7f010004, 0x7f010005,
            0x7f010006, 0x7f010007, 0x7f010008, 0x7f010009,
            0x7f01000a
        };
        /**
          <p>
          @attr description
           Indicates that this list will always be drawn on top of solid, single-color
             opaque background. This allows the list to optimize drawing. 


          <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name vn.boidstudio.freshflower:cacheColorHint
        */
        public static final int TwoWayAbsListView_cacheColorHint = 5;
        /**
          <p>
          @attr description
           When set to true, the selector will be drawn over the selected item.
             Otherwise the selector is drawn behind the selected item. The default
             value is false. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name vn.boidstudio.freshflower:drawSelectorOnTop
        */
        public static final int TwoWayAbsListView_drawSelectorOnTop = 1;
        /**
          <p>
          @attr description
           Drawable used to indicate the currently selected item in the list. 


          <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
          <p>This is a private symbol.
          @attr name vn.boidstudio.freshflower:listSelector
        */
        public static final int TwoWayAbsListView_listSelector = 0;
        /**
          <p>This symbol is the offset where the {@link vn.boidstudio.freshflower.R.attr#scrollDirectionLandscape}
          attribute's value can be found in the {@link #TwoWayAbsListView} array.


          <p>Must be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>vertical</code></td><td>0</td><td> Scroll up vertically. This is the default value. </td></tr>
<tr><td><code>horizontal</code></td><td>1</td><td> Scroll horizontally. </td></tr>
</table>
          @attr name vn.boidstudio.freshflower:scrollDirectionLandscape
        */
        public static final int TwoWayAbsListView_scrollDirectionLandscape = 8;
        /**
          <p>
          @attr description
           Use this attribute to control which direction the GridView scrolls when in
             portrait orientation 


          <p>Must be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>vertical</code></td><td>0</td><td> Scroll up vertically. This is the default value. </td></tr>
<tr><td><code>horizontal</code></td><td>1</td><td> Scroll horizontally. </td></tr>
</table>
          <p>This is a private symbol.
          @attr name vn.boidstudio.freshflower:scrollDirectionPortrait
        */
        public static final int TwoWayAbsListView_scrollDirectionPortrait = 7;
        /**
          <p>
          @attr description
           When set to true, the list uses a drawing cache during scrolling.
             This makes the rendering faster but uses more memory. The default
             value is true. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name vn.boidstudio.freshflower:scrollingCache
        */
        public static final int TwoWayAbsListView_scrollingCache = 3;
        /**
          <p>
          @attr description
           Enables the fast scroll thumb that can be dragged to quickly scroll through
             the list. 
 <attr name="fastScrollEnabled" format="boolean" /> 
 When set to true, the list will use a more refined calculation
             method based on the pixels height of the items visible on screen. This
             property is set to true by default but should be set to false if your adapter
             will display items of varying heights. When this property is set to true and
             your adapter displays items of varying heights, the scrollbar thumb will
             change size as the user scrolls through the list. When set to fale, the list
             will use only the number of items in the adapter and the number of items visible
             on screen to determine the scrollbar's properties. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name vn.boidstudio.freshflower:smoothScrollbar
        */
        public static final int TwoWayAbsListView_smoothScrollbar = 6;
        /**
          <p>
          @attr description
           Used by ListView and GridView to stack their content from the bottom. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name vn.boidstudio.freshflower:stackFromBottom
        */
        public static final int TwoWayAbsListView_stackFromBottom = 2;
        /**
          <p>
          @attr description
           When set to true, the list will filter results as the user types. The
             List's adapter must support the Filterable interface for this to work. 
 <attr name="textFilterEnabled" format="boolean" /> 
 Sets the transcript mode for the list. In transcript mode, the list
             scrolls to the bottom to make new items visible when they are added. 


          <p>Must be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>disabled</code></td><td>0</td><td> Disables transcript mode. This is the default value. </td></tr>
<tr><td><code>normal</code></td><td>1</td><td> The list will automatically scroll to the bottom when
                 a data set change notification is received and only if the last item is
                 already visible on screen. </td></tr>
<tr><td><code>alwaysScroll</code></td><td>2</td><td> The list will automatically scroll to the bottom, no matter what items
                 are currently visible. </td></tr>
</table>
          <p>This is a private symbol.
          @attr name vn.boidstudio.freshflower:transcriptMode
        */
        public static final int TwoWayAbsListView_transcriptMode = 4;
        /** Attributes that can be used with a TwoWayGridView.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #TwoWayGridView_columnWidth vn.boidstudio.freshflower:columnWidth}</code></td><td></td></tr>
           <tr><td><code>{@link #TwoWayGridView_gravity vn.boidstudio.freshflower:gravity}</code></td><td> Specifies how to place the content of an object, both
         on the x- and y-axis, within the object itself.</td></tr>
           <tr><td><code>{@link #TwoWayGridView_horizontalSpacing vn.boidstudio.freshflower:horizontalSpacing}</code></td><td></td></tr>
           <tr><td><code>{@link #TwoWayGridView_numColumns vn.boidstudio.freshflower:numColumns}</code></td><td></td></tr>
           <tr><td><code>{@link #TwoWayGridView_numRows vn.boidstudio.freshflower:numRows}</code></td><td></td></tr>
           <tr><td><code>{@link #TwoWayGridView_rowHeight vn.boidstudio.freshflower:rowHeight}</code></td><td></td></tr>
           <tr><td><code>{@link #TwoWayGridView_stretchMode vn.boidstudio.freshflower:stretchMode}</code></td><td></td></tr>
           <tr><td><code>{@link #TwoWayGridView_verticalSpacing vn.boidstudio.freshflower:verticalSpacing}</code></td><td></td></tr>
           </table>
           @see #TwoWayGridView_columnWidth
           @see #TwoWayGridView_gravity
           @see #TwoWayGridView_horizontalSpacing
           @see #TwoWayGridView_numColumns
           @see #TwoWayGridView_numRows
           @see #TwoWayGridView_rowHeight
           @see #TwoWayGridView_stretchMode
           @see #TwoWayGridView_verticalSpacing
         */
        public static final int[] TwoWayGridView = {
            0x7f010000, 0x7f01000b, 0x7f01000c, 0x7f01000d,
            0x7f01000e, 0x7f01000f, 0x7f010010, 0x7f010011
        };
        /**
          <p>This symbol is the offset where the {@link vn.boidstudio.freshflower.R.attr#columnWidth}
          attribute's value can be found in the {@link #TwoWayGridView} array.


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name vn.boidstudio.freshflower:columnWidth
        */
        public static final int TwoWayGridView_columnWidth = 4;
        /**
          <p>
          @attr description
           Specifies how to place the content of an object, both
         on the x- and y-axis, within the object itself. 


          <p>Must be one or more (separated by '|') of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>top</code></td><td>0x30</td><td> Push object to the top of its container, not changing its size. </td></tr>
<tr><td><code>bottom</code></td><td>0x50</td><td> Push object to the bottom of its container, not changing its size. </td></tr>
<tr><td><code>left</code></td><td>0x03</td><td> Push object to the left of its container, not changing its size. </td></tr>
<tr><td><code>right</code></td><td>0x05</td><td> Push object to the right of its container, not changing its size. </td></tr>
<tr><td><code>center_vertical</code></td><td>0x10</td><td> Place object in the vertical center of its container, not changing its size. </td></tr>
<tr><td><code>fill_vertical</code></td><td>0x70</td><td> Grow the vertical size of the object if needed so it completely fills its container. </td></tr>
<tr><td><code>center_horizontal</code></td><td>0x01</td><td> Place object in the horizontal center of its container, not changing its size. </td></tr>
<tr><td><code>fill_horizontal</code></td><td>0x07</td><td> Grow the horizontal size of the object if needed so it completely fills its container. </td></tr>
<tr><td><code>center</code></td><td>0x11</td><td> Place the object in the center of its container in both the vertical and horizontal axis, not changing its size. </td></tr>
<tr><td><code>fill</code></td><td>0x77</td><td> Grow the horizontal and vertical size of the object if needed so it completely fills its container. </td></tr>
<tr><td><code>clip_vertical</code></td><td>0x80</td><td> Additional option that can be set to have the top and/or bottom edges of
             the child clipped to its container's bounds.
             The clip will be based on the vertical gravity: a top gravity will clip the bottom
             edge, a bottom gravity will clip the top edge, and neither will clip both edges. </td></tr>
<tr><td><code>clip_horizontal</code></td><td>0x08</td><td> Additional option that can be set to have the left and/or right edges of
             the child clipped to its container's bounds.
             The clip will be based on the horizontal gravity: a left gravity will clip the right
             edge, a right gravity will clip the left edge, and neither will clip both edges. </td></tr>
</table>
          <p>This is a private symbol.
          @attr name vn.boidstudio.freshflower:gravity
        */
        public static final int TwoWayGridView_gravity = 0;
        /**
          <p>This symbol is the offset where the {@link vn.boidstudio.freshflower.R.attr#horizontalSpacing}
          attribute's value can be found in the {@link #TwoWayGridView} array.


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name vn.boidstudio.freshflower:horizontalSpacing
        */
        public static final int TwoWayGridView_horizontalSpacing = 1;
        /**
          <p>This symbol is the offset where the {@link vn.boidstudio.freshflower.R.attr#numColumns}
          attribute's value can be found in the {@link #TwoWayGridView} array.


          <p>May be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
<p>May be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>auto_fit</code></td><td>-1</td><td></td></tr>
</table>
          @attr name vn.boidstudio.freshflower:numColumns
        */
        public static final int TwoWayGridView_numColumns = 6;
        /**
          <p>This symbol is the offset where the {@link vn.boidstudio.freshflower.R.attr#numRows}
          attribute's value can be found in the {@link #TwoWayGridView} array.


          <p>May be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
<p>May be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>auto_fit</code></td><td>-1</td><td></td></tr>
</table>
          @attr name vn.boidstudio.freshflower:numRows
        */
        public static final int TwoWayGridView_numRows = 7;
        /**
          <p>This symbol is the offset where the {@link vn.boidstudio.freshflower.R.attr#rowHeight}
          attribute's value can be found in the {@link #TwoWayGridView} array.


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name vn.boidstudio.freshflower:rowHeight
        */
        public static final int TwoWayGridView_rowHeight = 5;
        /**
          <p>This symbol is the offset where the {@link vn.boidstudio.freshflower.R.attr#stretchMode}
          attribute's value can be found in the {@link #TwoWayGridView} array.


          <p>Must be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>none</code></td><td>0</td><td></td></tr>
<tr><td><code>spacingWidth</code></td><td>1</td><td></td></tr>
<tr><td><code>columnWidth</code></td><td>2</td><td></td></tr>
<tr><td><code>spacingWidthUniform</code></td><td>3</td><td></td></tr>
</table>
          @attr name vn.boidstudio.freshflower:stretchMode
        */
        public static final int TwoWayGridView_stretchMode = 3;
        /**
          <p>This symbol is the offset where the {@link vn.boidstudio.freshflower.R.attr#verticalSpacing}
          attribute's value can be found in the {@link #TwoWayGridView} array.


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name vn.boidstudio.freshflower:verticalSpacing
        */
        public static final int TwoWayGridView_verticalSpacing = 2;
    };
}
